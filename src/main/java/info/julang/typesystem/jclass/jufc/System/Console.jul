module System;

/*
 * Console provide means to input from and output to character-oriented terminal of the operating system.
 */
[Bridged(apiset="System.Console")]
class Console {
 	
 	/*
 	 * Print the given value to the console. If the value is an [Object], calls [Object.toString()](Object#toString())
 	 * to get the string to output. If the value is of primitive type, prints its literal representation.
 	 * If the value is null, prints "(null)".
 	 */
 	static void print(var obj){
 		if (obj == null) {
			_print("(null)");
			return;
		}
		
		if(obj is Object){
			_print(obj.toString());
		} else {
			_print(obj);
		}
	}
	
	/*
	 * Print the given value to the console, then a line break sequences as defined by the underlying
	 * operating system. See [toString()](Object#toString()) for more details.
	 */ 
 	static void println(var obj){
		if (obj == null) {
			_println("(null)");
			return;
		}
		
		if(obj is Object){
			_println(obj.toString());
		} else {
			_println(obj);
		}
	}
	
	[Bridged(name="print")]
	private hosted static void _print(var msg);
	
	[Bridged(name="println")]
	private hosted static void _println(var msg);
	
    /*
	 * Read the characters from standard input, until a line break sequences as defined by the underlying
	 * operating system is met. This method will be blocking the thread until the line break is accepted.
	 *
	 * [return] the string comprised of the input characters, excluding the line break at the end.
	 */ 
	[Bridged(name="readln")]
 	hosted static string readln();
}