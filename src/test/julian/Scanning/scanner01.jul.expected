[VOID]	void		index: 0 - 3 line/column: 0:0 - 0:3
[IDENTIFIER]	print		index: 5 - 9 line/column: 0:5 - 0:9
[LEFT_PAREN]	(		index: 10 - 10 line/column: 0:10 - 0:10
[STRING]	string		index: 11 - 16 line/column: 0:11 - 0:16
[IDENTIFIER]	s		index: 18 - 18 line/column: 0:18 - 0:18
[RIGHT_PAREN]	)		index: 19 - 19 line/column: 0:19 - 0:19
[LEFT_CURLY]	{		index: 20 - 20 line/column: 0:20 - 0:20
[COMMENT]			index: 24 - 43 line/column: 1:2 - 1:21
[RIGHT_CURLY]	}		index: 44 - 44 line/column: 2:0 - 2:0
[INT]	int		index: 46 - 48 line/column: 3:0 - 3:2
[IDENTIFIER]	i		index: 50 - 50 line/column: 3:4 - 3:4
[ASSIGN]	=		index: 52 - 52 line/column: 3:6 - 3:6
[NUMBER]	5		index: 54 - 54 line/column: 3:8 - 3:8
[COMMA]	,		index: 55 - 55 line/column: 3:9 - 3:9
[IDENTIFIER]	length		index: 57 - 62 line/column: 3:11 - 3:16
[ASSIGN]	=		index: 64 - 64 line/column: 3:18 - 3:18
[NUMBER]	7		index: 66 - 66 line/column: 3:20 - 3:20
[SEMICOLON]	;		index: 67 - 67 line/column: 3:21 - 3:21
[STRING]	string		index: 69 - 74 line/column: 4:0 - 4:5
[IDENTIFIER]	s		index: 76 - 76 line/column: 4:7 - 4:7
[ASSIGN]	=		index: 78 - 78 line/column: 4:9 - 4:9
[DOUBLE_QUOTED_LITERAL]	"ABC"		index: 80 - 84 line/column: 4:11 - 4:15
[SEMICOLON]	;		index: 85 - 85 line/column: 4:16 - 4:16
[INT]	int		index: 87 - 89 line/column: 5:0 - 5:2
[LEFT_SQUARE]	[		index: 90 - 90 line/column: 5:3 - 5:3
[RIGHT_SQUARE]	]		index: 91 - 91 line/column: 5:4 - 5:4
[IDENTIFIER]	arr		index: 93 - 95 line/column: 5:6 - 5:8
[ASSIGN]	=		index: 97 - 97 line/column: 5:10 - 5:10
[NEW]	new		index: 99 - 101 line/column: 5:12 - 5:14
[INT]	int		index: 103 - 105 line/column: 5:16 - 5:18
[LEFT_SQUARE]	[		index: 106 - 106 line/column: 5:19 - 5:19
[IDENTIFIER]	length		index: 107 - 112 line/column: 5:20 - 5:25
[RIGHT_SQUARE]	]		index: 113 - 113 line/column: 5:26 - 5:26
[SEMICOLON]	;		index: 114 - 114 line/column: 5:27 - 5:27
[FOR]	for		index: 116 - 118 line/column: 6:0 - 6:2
[LEFT_PAREN]	(		index: 119 - 119 line/column: 6:3 - 6:3
[INT]	int		index: 120 - 122 line/column: 6:4 - 6:6
[IDENTIFIER]	k		index: 124 - 124 line/column: 6:8 - 6:8
[ASSIGN]	=		index: 126 - 126 line/column: 6:10 - 6:10
[NUMBER]	0		index: 128 - 128 line/column: 6:12 - 6:12
[SEMICOLON]	;		index: 129 - 129 line/column: 6:13 - 6:13
[IDENTIFIER]	k		index: 131 - 131 line/column: 6:15 - 6:15
[LT]	<		index: 133 - 133 line/column: 6:17 - 6:17
[IDENTIFIER]	length		index: 135 - 140 line/column: 6:19 - 6:24
[SEMICOLON]	;		index: 141 - 141 line/column: 6:25 - 6:25
[IDENTIFIER]	k		index: 143 - 143 line/column: 6:27 - 6:27
[INCREMENT]	++		index: 144 - 145 line/column: 6:28 - 6:29
[RIGHT_PAREN]	)		index: 146 - 146 line/column: 6:30 - 6:30
[LEFT_CURLY]	{		index: 147 - 147 line/column: 6:31 - 6:31
[IF]	if		index: 151 - 152 line/column: 7:2 - 7:3
[LEFT_PAREN]	(		index: 153 - 153 line/column: 7:4 - 7:4
[TRUE]	true		index: 154 - 157 line/column: 7:5 - 7:8
[RIGHT_PAREN]	)		index: 158 - 158 line/column: 7:9 - 7:9
[LEFT_CURLY]	{		index: 159 - 159 line/column: 7:10 - 7:10
[IDENTIFIER]	arr		index: 165 - 167 line/column: 8:4 - 8:6
[LEFT_SQUARE]	[		index: 168 - 168 line/column: 8:7 - 8:7
[IDENTIFIER]	k		index: 169 - 169 line/column: 8:8 - 8:8
[RIGHT_SQUARE]	]		index: 170 - 170 line/column: 8:9 - 8:9
[ASSIGN]	=		index: 172 - 172 line/column: 8:11 - 8:11
[IDENTIFIER]	s		index: 174 - 174 line/column: 8:13 - 8:13
[DOT]	.		index: 175 - 175 line/column: 8:14 - 8:14
[IDENTIFIER]	length		index: 176 - 181 line/column: 8:15 - 8:20
[SEMICOLON]	;		index: 182 - 182 line/column: 8:21 - 8:21
[RIGHT_CURLY]	}		index: 186 - 186 line/column: 9:2 - 9:2
[ELSE]	else		index: 188 - 191 line/column: 9:4 - 9:7
[LEFT_CURLY]	{		index: 193 - 193 line/column: 9:9 - 9:9
[IDENTIFIER]	print		index: 199 - 203 line/column: 10:4 - 10:8
[LEFT_PAREN]	(		index: 204 - 204 line/column: 10:9 - 10:9
[DOUBLE_QUOTED_LITERAL]	"not impossible"		index: 205 - 220 line/column: 10:10 - 10:25
[RIGHT_PAREN]	)		index: 221 - 221 line/column: 10:26 - 10:26
[SEMICOLON]	;		index: 222 - 222 line/column: 10:27 - 10:27
[RIGHT_CURLY]	}		index: 226 - 226 line/column: 11:2 - 11:2
[RIGHT_CURLY]	}		index: 228 - 228 line/column: 12:0 - 12:0